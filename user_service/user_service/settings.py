"""
Django settings for user_service project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-s#-qmx$5_&byf3=u7=t!7mt&jonl$wit+4#es+566d-kgy$53d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*","192.168.1.28",'192.168.1.12', "192.168.0.200","localhost", "127.0.0.1",'192.168.0.201','192.168.0.204','192.168.0.203',"192.168.23.214",'192.168.16.214','192.168.1.28','192.168.1.11', '192.168.78.214','192.168.78.48','192.168.1.30']


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}


import environ
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))  

# print('SECRET_KEY:', env('SECRET_KEY')) 

SECRET_KEY = env('SECRET_KEY')


AUTH_USER_MODEL = 'accounts.User'


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'accounts',
    "corsheaders",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
        "http://192.168.78.146:3000",

    "http://localhost:3000",  
    "http://192.168.0.203:3000",
    "http://192.168.0.204:3000",

    "http:// 192.168.78.214:3000",
    "http:// 192.168.78.214:3000",
    
    "http:// 192.168.78.214:8001",
    "http:// 192.168.78.214:8002",
    "http:// 192.168.78.214:8005",


    "http://192.168.0.204:8001",
    "http://192.168.0.204:8002",
    "http://192.168.0.204:8003",
    "http://192.168.1.31:3000",  # Prathamesh
    "http://192.168.1.12:3000",  # Prathamesh
    "http://192.168.1.11:3000",   # Atharva
    "http://192.168.1.30:3000",   # vasi
    "http://192.168.23.116:3000",   # vasi
    "http://192.168.1.23:3000",   # mohit
    "http://192.168.16.146:3000",   # stharva
    'http://192.168.16.214:8001',
    'http://192.168.16.214:8002',
    'http://192.168.16.214:8003',
    "http://192.168.16.116:3000",

    "http://192.168.1.28:8000",  
    "http://192.168.1.28:8001",  # Microservice 1 on your machine
    "http://192.168.1.28:8002",  # Microservice 2 on your machine
    "http://192.168.1.28:8003",
    "http://192.168.1.28:8005",  # Microservice 3 on your machine

    "http://192.168.23.214:8001",  # Microservice 1 on your machine
    "http://192.168.23.214:8002",  # Microservice 2 on your machine
    "http://192.168.23.214:8003",  # Microservice 3 on your machine
# 192.168.16.214
]


import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') 

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

ROOT_URLCONF = 'user_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'user_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

BASE_DIR = Path(__file__).resolve().parent.parent


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'vasisayed09421@gmail.com'
EMAIL_HOST_PASSWORD = 'qikm klxf jsen nwxb'